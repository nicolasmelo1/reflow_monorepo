/**
* Automatically Generated by Reflow at 2022-01-11T20:12:12.705Z
* */

'use strict'

module.exports = {
    engine: "SequelizeEngine",
    dependency: "14_auto_migration_1641773391914",
    operations: (models, actions) => {
        return [
			new actions.ChangeColumn(
        		"Formulary",
        		"app",
        		new models.fields.ForeignKeyField({"underscored":true,"primaryKey":false,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"app_id","customAttributes":{},"attributeName":"app","relatedTo":"App","fieldName":"appId","onDelete":"cascade","relatedName":null,"toField":null}),
        		new models.fields.OneToOneField({"underscored":true,"primaryKey":false,"allowBlank":true,"allowNull":false,"unique":true,"dbIndex":false,"databaseName":"app_id","customAttributes":{},"attributeName":"app","relatedTo":"App","fieldName":"appId","onDelete":"cascade","relatedName":null,"toField":null})
    		),
			new actions.CreateColumn(
        		"FieldConnection",
        		"uuid",
        		new models.fields.UUIDField({"underscored":true,"primaryKey":false,"allowBlank":false,"allowNull":true,"unique":false,"dbIndex":false,"databaseName":"uuid","customAttributes":{},"attributeName":"uuid","maxLength":36,"autoGenerate":false})
    		),
			new actions.CreateColumn(
        		"Section",
        		"uuid",
        		new models.fields.UUIDField({"underscored":true,"primaryKey":false,"allowBlank":false,"allowNull":true,"unique":false,"dbIndex":false,"databaseName":"uuid","customAttributes":{},"attributeName":"uuid","maxLength":36,"autoGenerate":false})
    		),
			new actions.CreateColumn(
        		"FieldNumber",
        		"prefix",
        		new models.fields.CharField({"underscored":true,"primaryKey":false,"defaultValue":null,"allowBlank":true,"allowNull":true,"unique":false,"dbIndex":false,"databaseName":"prefix","customAttributes":{},"attributeName":"prefix","maxLength":280})
    		),
			new actions.RenameModel(
        		"FieldOption",
        		"Option"
    		),
			new actions.ChangeModel(
        		"Option",
        		{
					autoId: true,
					primaryKeyField: new models.fields.BigAutoField({"underscored":true,"primaryKey":true,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"id","customAttributes":{},"attributeName":"id"}),
					abstract: false,
					underscored: true,
					tableName: "field_option",
					managed: true,
					ordering: ["order"],
					indexes: [],
					customOptions: {},
				},
        		{
					autoId: true,
					primaryKeyField: new models.fields.BigAutoField({"underscored":true,"primaryKey":true,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"id","customAttributes":{},"attributeName":"id"}),
					abstract: false,
					underscored: true,
					tableName: "option",
					managed: true,
					ordering: ["order"],
					indexes: [],
					customOptions: {},
				}
    		),
			new actions.CreateModel(
        		"FieldUser",
        		{ 
					id:new models.fields.BigAutoField({"underscored":true,"primaryKey":true,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"id","customAttributes":{},"attributeName":"id"}),
					uuid:new models.fields.UUIDField({"underscored":true,"primaryKey":false,"allowBlank":false,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"uuid","customAttributes":{},"attributeName":"uuid","maxLength":36,"autoGenerate":false}),
					field:new models.fields.OneToOneField({"underscored":true,"primaryKey":false,"allowBlank":true,"allowNull":false,"unique":true,"dbIndex":false,"databaseName":"field_id","customAttributes":{},"attributeName":"field","relatedTo":"Field","fieldName":"fieldId","onDelete":"cascade","relatedName":null,"toField":null}),
					autoCreate:new models.fields.BooleanField({"underscored":true,"primaryKey":false,"defaultValue":false,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"auto_create","customAttributes":{},"attributeName":"autoCreate"}),
					autoUpdate:new models.fields.BooleanField({"underscored":true,"primaryKey":false,"defaultValue":false,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"auto_update","customAttributes":{},"attributeName":"autoUpdate"}),
 				},
        		{
					autoId: true,
					primaryKeyField: new models.fields.BigAutoField({"underscored":true,"primaryKey":true,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"id","customAttributes":{},"attributeName":"id"}),
					abstract: false,
					underscored: true,
					tableName: "field_user",
					managed: true,
					ordering: [],
					indexes: [],
					customOptions: {},
				}
    		),
			new actions.CreateModel(
        		"FieldFormula",
        		{ 
					id:new models.fields.BigAutoField({"underscored":true,"primaryKey":true,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"id","customAttributes":{},"attributeName":"id"}),
					uuid:new models.fields.UUIDField({"underscored":true,"primaryKey":false,"allowBlank":false,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"uuid","customAttributes":{},"attributeName":"uuid","maxLength":36,"autoGenerate":false}),
					field:new models.fields.OneToOneField({"underscored":true,"primaryKey":false,"allowBlank":true,"allowNull":false,"unique":true,"dbIndex":false,"databaseName":"field_id","customAttributes":{},"attributeName":"field","relatedTo":"Field","fieldName":"fieldId","onDelete":"cascade","relatedName":null,"toField":null}),
					formula:new models.fields.TextField({"underscored":true,"primaryKey":false,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"formula","customAttributes":{},"attributeName":"formula"}),
 				},
        		{
					autoId: true,
					primaryKeyField: new models.fields.BigAutoField({"underscored":true,"primaryKey":true,"allowBlank":true,"allowNull":false,"unique":false,"dbIndex":false,"databaseName":"id","customAttributes":{},"attributeName":"id"}),
					abstract: false,
					underscored: true,
					tableName: "field_formula",
					managed: true,
					ordering: [],
					indexes: [],
					customOptions: {},
				}
    		),
        ]
    }
}